{"version":3,"sources":["model/direction.ts","model/mouvement.ts","reducers/playground.ts","AppStateProvider.tsx","components/header/Header.tsx","components/grid/Grid.tsx","model/grid.ts","components/rover/Rover.tsx","components/playground/Playground.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Direction","DirectionNames","North","South","East","West","rotateRight","direction","rotateLeft","forward","position","x","y","Math","min","GRID_SIZE_HEIGHT","max","GRID_SIZE_WIDTH","initialState","roverPosition","roverDirection","commands","playground","state","action","type","payload","AppStateContext","createContext","AppDispatchContext","AppStateProvider","children","useReducer","dispatch","Provider","value","Header","className","Grid","props","cells","cellWidth","width","cellHeight","height","i","j","cellIndex","push","style","left","bottom","Rover","rotationClass","Playground","useContext","dispatcher","onClick","split","disabled","gridWidth","gridHeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13e79a27.chunk.js","sourcesContent":["export enum Direction {\n  North = 'N',\n  South = 'S',\n  East = 'E',\n  West = 'W'\n}\n\nexport const DirectionNames = {\n  [Direction.North]: 'North',\n  [Direction.South]: 'South',\n  [Direction.East]: 'East',\n  [Direction.West]: 'West'\n}\n","import { Direction } from './direction';\nimport { GRID_SIZE_HEIGHT, GRID_SIZE_WIDTH } from './grid';\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport function rotateRight(direction: Direction): Direction {\n  switch (direction) {\n    case Direction.North:\n      return Direction.East;\n    case Direction.East:\n      return Direction.South;\n    case Direction.South:\n      return Direction.West;\n    case Direction.West:\n      return Direction.North;\n  }\n}\n\nexport function rotateLeft(direction: Direction): Direction {\n  switch (direction) {\n    case Direction.North:\n      return Direction.West;\n    case Direction.West:\n      return Direction.South;\n    case Direction.South:\n      return Direction.East;\n    case Direction.East:\n      return Direction.North;\n  }\n}\n\nexport function forward(position: Position, direction: Direction): Position {\n  switch (direction) {\n    case Direction.North:\n      return { x: position.x, y: Math.min(position.y + 1, GRID_SIZE_HEIGHT - 1) };\n    case Direction.West:\n      return { x: Math.max(position.x - 1, 0), y: position.y };\n    case Direction.South:\n      return { x: position.x, y: Math.max(position.y - 1, 0) };\n    case Direction.East:\n      return { x: Math.min(position.x + 1, GRID_SIZE_WIDTH - 1), y: position.y };\n  }\n}\n","import { Direction } from '../model/direction';\nimport { forward, Position, rotateLeft, rotateRight } from '../model/mouvement';\n\nexport interface PlaygroundState {\n  roverPosition: Position;\n  roverDirection: Direction;\n  commands: string;\n}\n\nexport const initialState: PlaygroundState = {\n  roverPosition: {\n    x: 0,\n    y: 0\n  },\n  roverDirection: Direction.North,\n  commands: 'rfflfflfrff'\n}\n\nexport type PlaygroundAction =\n  | { type: 'forward' }\n  | { type: 'right' }\n  | { type: 'left' }\n  | { type: 'clear' }\n  | { type: 'add', payload: 'f' | 'r' | 'l' };\n\nexport default function playground(state: PlaygroundState, action: PlaygroundAction): PlaygroundState {\n  switch (action.type) {\n    case 'forward':\n      return {\n        ...state,\n        roverPosition: forward(state.roverPosition, state.roverDirection)\n      };\n    case 'right':\n      return {\n        ...state,\n        roverDirection: rotateRight(state.roverDirection)\n      };\n    case 'left':\n      return {\n        ...state,\n        roverDirection: rotateLeft(state.roverDirection)\n      };\n    case 'clear':\n      return {\n        ...state,\n        commands: ''\n      };\n    case 'add':\n      return {\n        ...state,\n        commands: state.commands + action.payload\n      };\n  }\n\n  return state;\n}\n","import { createContext, Dispatch, useContext, useReducer } from 'react';\nimport playground, { initialState, PlaygroundAction, PlaygroundState } from './reducers/playground';\n\nexport const AppStateContext = createContext<PlaygroundState | null>(null);\nexport const AppDispatchContext = createContext<Dispatch<PlaygroundAction> | null>(null);\n\nexport function useAppState(): PlaygroundState {\n  return useContext(AppStateContext) as PlaygroundState;\n}\n\nexport function useAppDispatch(): Dispatch<PlaygroundAction> {\n  return useContext(AppDispatchContext) as Dispatch<PlaygroundAction>;\n}\n\nexport default function AppStateProvider({children}: any) {\n  const [state, dispatch] = useReducer(playground, initialState);\n\n  return (\n    <AppStateContext.Provider value={state}>\n      <AppDispatchContext.Provider value={dispatch}>\n        {children}\n      </AppDispatchContext.Provider>\n    </AppStateContext.Provider>\n  );\n}\n","import React from 'react';\n\nexport default function Header() {\n  return (\n    <header className=\"navbar navbar-dark bg-danger\">\n      <div className=\"container-fluid\">\n        <h1 className=\"navbar-brand mb-0\">Mars Rover</h1>\n      </div>\n    </header>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport './Grid.css';\nimport { GRID_SIZE_WIDTH, GRID_SIZE_HEIGHT } from '../../model/grid';\n\nexport interface GridProps {\n  width: number;\n  height: number;\n  children: ReactNode;\n}\n\nexport default function Grid(props: GridProps) {\n  const cells = [];\n  const cellWidth = props.width / GRID_SIZE_WIDTH;\n  const cellHeight = props.height / GRID_SIZE_HEIGHT;\n\n  for (let i = 0; i < GRID_SIZE_HEIGHT; i++) {\n    for (let j = 0; j < GRID_SIZE_WIDTH; j++) {\n      const cellIndex = i * GRID_SIZE_HEIGHT + j;\n\n      cells.push(<div key={cellIndex} className=\"Grid-cell bg-warning\" style={{\n        left: `${j * cellWidth + 1}px`,\n        bottom: `${i * cellHeight + 1}px`,\n        width: `${cellWidth - 2}px`,\n        height: `${cellHeight - 2}px`\n      }}></div>);\n    }\n  }\n\n  return (\n    <div className=\"Grid mx-auto\" style={{\n      width: props.width,\n      height: props.height\n    }}>\n      {cells}\n      {props.children}\n    </div>\n  );\n}\n","export const GRID_SIZE_WIDTH = 10;\nexport const GRID_SIZE_HEIGHT = 10;\n","import React from 'react';\nimport { Direction } from '../../model/direction';\nimport './Rover.css';\n\nexport interface RoverProps {\n  x: number;\n  y: number;\n  direction: Direction;\n  cellWidth: number;\n  cellHeight: number;\n}\n\nexport default function Rover({ x, y, direction, cellWidth, cellHeight }: RoverProps) {\n\n  let rotationClass = '';\n\n  switch (direction) {\n    case Direction.East:\n      rotationClass = 'rotate-90';\n      break;\n    case Direction.South:\n      rotationClass = 'rotate-180';\n      break;\n    case Direction.West:\n      rotationClass = 'rotate-270';\n      break;\n  }\n\n  return (\n    <div className=\"Rover text-success text-center\" style={{\n      left: `${x * cellWidth + 1}px`,\n      bottom: `${y * cellHeight + 1}px`,\n      width: `${cellWidth - 2}px`,\n      height: `${cellHeight - 2}px`\n    }}>\n      <div className={rotationClass}><i className=\"bi bi-arrow-up\"></i></div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '../grid/Grid';\nimport Rover from '../rover/Rover';\nimport { DirectionNames } from '../../model/direction';\nimport { GRID_SIZE_HEIGHT, GRID_SIZE_WIDTH } from '../../model/grid';\nimport { useAppDispatch, useAppState } from '../../AppStateProvider';\n\nexport default function Playground() {\n  const state = useAppState();\n  const dispatcher = useAppDispatch();\n\n  const gridWidth = 300;\n  const gridHeight = 300;\n  const cellWidth = gridWidth / GRID_SIZE_WIDTH;\n  const cellHeight = gridHeight / GRID_SIZE_HEIGHT;\n\n  const handleExecute = () => {\n    for (const command of state.commands.split('')) {\n      switch (command) {\n        case 'f':\n          dispatcher({ type: 'forward' });\n          break;\n        case 'r':\n          dispatcher({ type: 'right' });\n          break;\n        case 'l':\n          dispatcher({ type: 'left' });\n          break;\n      }\n\n      dispatcher({ type: 'clear' });\n    }\n  };\n\n  const handleForwardMovement = () => {\n    dispatcher({ type: 'add', payload: 'f' });\n  };\n\n  const handleRightMovement = () => {\n    dispatcher({ type: 'add', payload: 'r' });\n  };\n\n  const handleLeftMovement = () => {\n    dispatcher({ type: 'add', payload: 'l' });\n  };\n\n  return (\n    <div className=\"card bg-white\">\n      <div className=\"card-body\">\n\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <h4 className=\"mb-0\">Playground</h4>\n              <button className=\"btn btn-success mx-2\" onClick={handleExecute} disabled={!state.commands}>\n                <i className=\"bi bi-play-fill\"></i> Execute\n              </button>\n            </div>\n\n            <div className=\"my-4\">\n              <div>Rover Coord: <code>x={state.roverPosition.x} y={state.roverPosition.y}</code></div>\n              <div>Rover Direction: <code>{DirectionNames[state.roverDirection]}</code></div>\n              <div>Commands: <code>{state.commands || '<empty>'}</code></div>\n            </div>\n\n            <div className=\"my-4 d-flex justify-content-center\">\n              <button className=\"btn btn-secondary mx-2\" type=\"button\" onClick={handleForwardMovement}><i className=\"bi bi-arrow-up\"></i> Forward</button>\n              <button className=\"btn btn-secondary mx-2\" type=\"button\" onClick={handleLeftMovement}><i className=\"bi bi-arrow-counterclockwise\"></i> Turn Left</button>\n              <button className=\"btn btn-secondary mx-2\" type=\"button\" onClick={handleRightMovement}><i className=\"bi bi-arrow-clockwise\"></i> Turn Right</button>\n            </div>\n\n          </div>\n\n          <div className=\"col-6 border-start\">\n            <Grid width={gridWidth} height={gridHeight}>\n              <Rover\n                x={state.roverPosition.x}\n                y={state.roverPosition.y}\n                direction={state.roverDirection}\n                cellWidth={cellWidth}\n                cellHeight={cellHeight}\n              />\n            </Grid>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport AppStateProvider from './AppStateProvider';\nimport Header from './components/header/Header';\nimport Playground from './components/playground/Playground';\n\nexport default function App() {\n  return (\n    <AppStateProvider>\n      <Header />\n\n      <main className=\"container my-4\">\n        <Playground />\n      </main>\n    </AppStateProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}